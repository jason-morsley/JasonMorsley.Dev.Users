<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Users.API</name>
    </assembly>
    <members>
        <member name="M:Users.API.Controllers.RootContoller.GetRoot(System.String)">
            <summary>
            Creates links to basic information
            </summary>
            <param name="mediaType">The media type to return</param>
            <returns></returns>
        </member>
        <member name="M:Users.API.Controllers.UsersController.GetUsers(Users.API.Helpers.UsersResourceParameters,System.String)">
            <summary>
            Gets all users
            </summary>
            <param name="mediaType">The media type you wish the response to be returned as</param>
            <param name="usersResourceParameters">A resource object containing information about page size and search queries.</param>
            <returns>All users with an id, firstname and lastname fields</returns>
        </member>
        <member name="M:Users.API.Controllers.UsersController.GetUser(System.Guid,System.String)">
            <summary>
            Get a user by their id
            </summary>
            <param name="id">The id of the user you want to get</param>
            <param name="fields">a list of resource fields you want</param>
            <returns>A User with id, firstname and lastname fields</returns>
        </member>
        <member name="M:Users.API.Controllers.UsersController.CreateUser(Users.API.Models.UserForCreationDto)">
            <summary>
            Adds a user given correct input
            </summary>
            <param name="user">A user populated with required details; firstname and lastname.</param>
            <returns>201 Created</returns>
        </member>
        <member name="M:Users.API.Controllers.UsersController.Put(System.Guid,Users.API.Entities.User)">
            <summary>
            Not implemented yet.
            </summary>
            <param name="userId"></param>
            <param name="user"></param>
        </member>
        <member name="M:Users.API.Controllers.UsersController.DeleteUser(System.Guid)">
            <summary>
            Deletes a user by their userId
            </summary>
            <param name="userId">The id of the user you wish to delete</param>
            <returns>204 NoContent</returns>
        </member>
        <member name="T:Users.API.Entities.User">
            <summary>
            A user with Id, FirstName and LastName fields
            </summary>
        </member>
        <member name="P:Users.API.Entities.User.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Users.API.Entities.User.FirstName">
            <summary>
            The first name of the user
            </summary>
        </member>
        <member name="P:Users.API.Entities.User.LastName">
            <summary>
            The last name of the user
            </summary>
        </member>
        <member name="P:Users.API.Helpers.UsersResourceParameters.SearchQuery">
            <summary>
            Search for specific names or ids
            </summary>
        </member>
        <member name="P:Users.API.Helpers.UsersResourceParameters.OrderBy">
            <summary>
            The way in which you wish to sort the result, eg by Id, name.
            </summary>
        </member>
        <member name="P:Users.API.Helpers.UsersResourceParameters.Fields">
            <summary>
            Search fields you wish to include, eg name, id.
            </summary>
        </member>
        <member name="P:Users.API.Models.UserDto.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:Users.API.Models.UserDto.Name">
            <summary>
            Full name of the user
            </summary>
        </member>
    </members>
</doc>
